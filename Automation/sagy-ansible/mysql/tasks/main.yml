---

- name: Install MySQL
  apt: name={{ item }} update_cache=yes  state=present
  with_items:
  - python-mysqldb
  - mysql-server
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Start the MySQL service
  service: 
    name: mysql
    state: started
    enabled: true
  when: "inventory_hostname in groups['docker_swarm_manager']"

# create root .my.cnf config file
- name: Add .my.cnf
  template: src=my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Set root Password
  mysql_user: login_password={{ mysql_root_password }} check_implicit_admin=yes name=root host={{ item }} password={{ mysql_root_password }} state=present 
  with_items:
    - localhost
    - 127.0.0.1
    - ::1
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Remove test database and access to it
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DROP DATABASE IF EXISTS test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: False
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: create mysql tungsten user
  mysql_user:
    name: tungsten
    host: '%'
    password: admin123
    priv: '*.*:ALL,GRANT'
    state: present
  when: "inventory_hostname in groups['docker_swarm_manager']"

- name: Create a new database with name 'continuent_users'
  mysql_db:
    name: continuent_users
    state: present 
